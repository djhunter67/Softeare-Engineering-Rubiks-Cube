# -*- org-confirm-babel-evaluate: nil -*-
#+AUTHOR: Christerpher Hunter
#+EMAIL: djhunter67@gmail.com
#+OPTIONS: toc:nil todo:nil  num:nil title:nil
#+LATEX_HEADER:\usepackage{mathptmx}
#+LATEX_HEADER: \usepackage[letterpaper,top=1in, bottom=1in, left=1.5in, right=1in]{geometry}
#+LATEX_HEADER: \usepackage[round]{natbib}
#+LATEX_HEADER: \usepackage{setspace}
#+LATEX_HEADER: \doublespacing
#+LATEX_HEADER:\pagenumbering{Roman}
#+LATEX_HEADER:\usepackage{scrlayer-scrpage}

\begin{titlepage}
\begin{center}
\vspace{2cm}
{\huge  Rubikan Architecture \par}
\vspace{2cm}
by \par
\vspace{0cm}
{\Large Christerpher Hunter \par}
\vfill
Nova Southeaster University\\
{\small \today  \par}
\end{center}
\end{titlepage}


* Architecture

I am using an Object-Oriented architecture that will contain four sections.  The first section includes the opening of the application.  The second section includes the main inteface of the application.  The third section includes the actions upon completing the game.  Finally, the last section includes database actions in all database scenarios and uses the Data-centered architecture.

** Startup

#+BEGIN_SRC plantuml :file prac_architecture.png

         scale 600

   class Initialize {
      ,* display solved cube
      }

    class OSCheck {
  + confirm Operating System
  + confirm number of monitors
  }

    class Username {
    ,* get username
  }

        Initialize <--> OSCheck
        Initialize <--> Username

#+END_SRC

#+RESULTS:
[[file:prac_architecture.png]]
\newpage
** Standby State
#+BEGIN_SRC plantuml :file main_architecture.png

       scale 600

     package SplashScreen <<Node>> {
       class Main {}
       class Cube {}
       class Username {}  
       <> diamond
     package Controls {
     class Start {}
     class TimeAttack {}
     class Compass {}
     class Quit {}
   }
       }
       package Models <<Database>>{
       class DataBase {} 
       }

      Main -- diamond
      diamond -- Start
      diamond -- TimeAttack
      diamond -- Compass
      diamond -- Quit

#+END_SRC

#+RESULTS:
[[file:main_architecture.png]]

\newpage
** Active State
#+BEGIN_SRC plantuml :file game_architecture.png

        scale 600

        package "Active Game" as AG {
           class Start {}
           class Username {}  
           class Restart {}
           class Reset {}
               class Timer {}
           class Selection {}
           class Rotate {}
           class Controls {}
           class Quit {}
                <> diamond
  }
           package Models <<Database>>{
           class DataBase {} 
           }

    package "Won Game" as WG {
           class Completed {}
         }


          Start . diamond
          diamond - Selection
          diamond --> DataBase
          diamond --> Controls
              diamond --> Restart
          Controls <--> Rotate
          Restart --> Reset
	    Timer --> diamond
        Start <-- Username
        AG +--> WG
     Completed  --> DataBase




#+END_SRC

#+RESULTS:
[[file:game_architecture.png]]

\newpage
** Time-Attack State

#+BEGIN_SRC plantuml :file time-attack_architecture.png

     scale 600
   package TimeAttackMode {
   class TimeAttack {}
       class Controls {}
      class Selection {}
    class Username {}
        class Timer {}
      class Rotate {}
  class Quit {}
     }
       package Models <<Database>> {
             class DataBase {}
           }
         package Won {
          class Completed {}
       }


       TimeAttack <-- Username
       TimeAttack <-- Timer
       TimeAttack --> Controls
       Controls --> Selection
       Controls --> Rotate
       Models --> TimeAttack
       Timer --|> Quit
       TimeAttackMode +---> Won
     Won ---> Models


#+END_SRC

#+RESULTS:
[[file:time-attack_architecture.png]]

\newpage
** Data-centered Architecture

#+BEGIN_SRC plantuml :file data_architecture.png

  scale 600
  database "sqlite3" 

  frame "class Initialize" as f1
  frame "class Username" as f2
  frame "class Reset" as f3
  frame "class Restart" as f4
  frame "class TimeAttack" as f5
  frame "class Comparison" as f6
  frame "class Completed" as f7
  frame "class Selection" as f8
  frame "class Compass" as f9
  frame "class Scores" as f10

      sqlite3 <-left-> f1
      sqlite3 <-right-> f2
      sqlite3 <--> f3
      sqlite3 <--> f4
      sqlite3 <--> f5
      sqlite3 <--> f6
      sqlite3 <-up-> f7
      sqlite3 <-up-> f8
      sqlite3 <-up-> f9
      sqlite3 <-up-> f10


#+END_SRC

#+RESULTS:
[[file:data_architecture.png]]
